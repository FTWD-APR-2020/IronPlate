{"version":3,"sources":["assets/images/mobilityLogo.png","components/home/Home.js","components/404/NotFound.js","services/index.js","components/auth/SignUp.js","components/auth/LogIn.js","components/profile/Profile.js","components/Mobility/MobilityTrends.js","components/Regions/Region.js","App.js","serviceWorker.js","index.js","assets/images/down_arrow.png","assets/images/up_arrow.png","assets/images/small_calendar.jpg"],"names":["module","exports","Home","state","redirect","mapHandler","event","console","log","target","dataset","name","props","setRegion","setState","this","to","Container","fluid","Row","Col","Jumbotron","className","alt","src","mobilityLogo","id","Button","variant","size","rel","href","onClick","Component","NotFound","baseURL","service","axios","create","withCredentials","actions","isLoggedIn","a","get","signUp","user","post","logIn","logOut","returnMobilityData","regionName","params","region","updateUserGroceryData","updateUserParksData","SignUp","handleChange","e","value","handleSubmit","preventDefault","then","setUser","data","catch","response","error","history","push","onSubmit","type","onChange","LogIn","Profile","grocery","userGroceryData","parks","userParksData","undefined","window","location","reload","map","eachGroceryStat","savedLocation","savedDate","dataStartDate","dataEndDate","Accordion","defaultActiveKey","Card","Header","Toggle","as","eventKey","Collapse","Body","Table","striped","bordered","hover","eachDay","i","colSpan","eachParkStat","email","MobilityTrends","mobilityData","groceryStats","dateStats","parkStats","transitStats","residentialStats","workStats","shoppingDiningStats","chartReference","React","createRef","done","showAlertGrocery","showAlertParks","displayRegionName","getAverageGrocery","copyGrocery","total","length","Number","avg","roundedAvg","Math","round","downArrow","upArrow","getAverageParks","copyParks","getAverageTransit","copyTransit","getAverageResidential","copyResidential","getAverageShoppingDining","copyShoppingDining","getAverageWork","copyWork","showGraphGroceryPharmacy","x","y","label","domainPadding","dependentAxis","tickFormat","style","fill","alignment","domain","labelComponent","events","eventHandlers","onMouseOver","mutation","active","onMouseOut","showGraphParks","showGraphTransit","showGraphResidential","showGraphShoppingDining","showGraphWork","saveGroceryData","groceryData","dataStart","dataEnd","res","lastUpdatedUserId","saveParksData","parksData","closeAlertGrocery","closeAlertParks","rawData","mobilities","dataLastThirtyDays","slice","eachDataPoint","parseInt","grocery_and_pharmacy_percent_change_from_baseline","date","parks_percent_change_from_baseline","transit_stations_percent_change_from_baseline","residential_percent_change_from_baseline","retail_and_recreation_percent_change_from_baseline","workplaces_percent_change_from_baseline","sub_region_1","setTimeout","smallCalendar","Alert","show","dismissible","color","Region","App","createdAt","updatedAt","_id","integrity","crossOrigin","Navbar","bg","expand","Brand","aria-controls","Nav","Item","Link","inline","exact","path","render","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,0C,kYCuE5BC,E,4MAvDbC,MAAQ,CACNC,SAAU,M,EAGZC,WAAa,SAACC,GACZC,QAAQC,IAAIF,EAAMG,OAAOC,QAAQC,MAEjC,EAAKC,MAAMC,UAAUP,EAAMG,OAAOC,QAAQC,MAC1C,EAAKG,SAAS,CACZV,SAAU,a,uDAKZ,OAAIW,KAAKZ,MAAMC,SACN,kBAAC,IAAD,CAAUY,GAAID,KAAKZ,MAAMC,WAGhC,6BACA,6BACA,kBAACa,EAAA,EAAD,CAAWC,MAAM,MACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAWC,UAAU,aACrB,yBAAKC,IAAI,IAAIC,IAAKC,IAAcC,GAAG,kBACjC,yBAAKJ,UAAU,gCAEb,yBAAKA,UAAU,sBAEb,uBAAGA,UAAU,uBAAb,iNAEE,6BACA,6BAHF,+EAMA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,eAAeC,KAAK,MAAK,uBAAGH,GAAG,cAAcjB,OAAO,SAASqB,IAAI,sBAAsBC,KAAK,4CAAnE,eAAsI,OAMnL,6BACE,yBAAKT,UAAU,OACb,kBAAC,IAAD,CAAQU,QAASjB,KAAKV,uB,GA9CnB4B,aCHJC,ICTXC,EDSWD,EARf,WACE,OACE,6BACE,2C,iBCDDC,EAAU,oDAIf,IAAMC,E,OAAUC,EAAMC,OAAO,CAAEC,iBAAiB,EAAMJ,YA4BvCK,EA1BC,CACdC,WAAW,WAAD,4BAAE,sBAAAC,EAAA,sEACGN,EAAQO,IAAI,iBADf,mFAAF,kDAAC,GAGXC,OAAO,WAAD,4BAAE,WAAOC,GAAP,SAAAH,EAAA,sEACON,EAAQU,KAAK,UAAWD,GAD/B,mFAAF,mDAAC,GAGPE,MAAM,WAAD,4BAAE,WAAOF,GAAP,SAAAH,EAAA,sEACQN,EAAQU,KAAK,SAAUD,GAD/B,mFAAF,mDAAC,GAGNG,OAAO,WAAD,4BAAE,sBAAAN,EAAA,sEACON,EAAQO,IAAI,WADnB,mFAAF,kDAAC,GAGPM,mBAAmB,WAAD,4BAAE,WAAOC,GAAP,SAAAR,EAAA,sEACLN,EAAQO,IAAI,cAAe,CAACQ,OACvC,CAAEC,OAAQF,KAFM,mFAAF,mDAAC,GAKnBG,sBAAsB,WAAD,4BAAE,WAAOR,GAAP,SAAAH,EAAA,sEACRN,EAAQU,KAAK,sBAAuBD,GAD5B,mFAAF,mDAAC,GAGtBS,oBAAoB,WAAD,4BAAE,WAAOT,GAAP,SAAAH,EAAA,sEACNN,EAAQU,KAAK,oBAAqBD,GAD5B,mFAAF,mDAAC,ICAPU,E,4MA3BXpD,MAAQ,G,EAGRqD,aAAe,SAAAC,GAAC,OAAI,EAAK3C,SAAL,eAAgB2C,EAAEhD,OAAOE,KAAO8C,EAAEhD,OAAOiD,S,EAE7DC,aAAgB,SAAAF,GACZA,EAAEG,iBACEpB,EAAQI,OAAO,EAAKzC,OAAO0D,MAAK,SAAAhB,GAC5B,EAAKjC,MAAMkD,QAAX,eAAuBjB,EAAKkB,UAC7BC,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkB1D,QAAQ2D,MAAMD,EAASF,SAClD,EAAKnD,MAAMuD,QAAQC,KAAK,M,uDAG5B,OACI,kBAAC,WAAD,KACI,sCACA,0BAAMC,SAAUtD,KAAK4C,cACjB,2BAAOhD,KAAK,QAAQ2D,KAAK,QAAQC,SAAUxD,KAAKyC,eAChD,6BACA,2BAAO7C,KAAK,WAAW2D,KAAK,WAAWC,SAAUxD,KAAKyC,eACtD,2BAAOc,KAAK,SAASZ,MAAM,kB,GArB1BzB,aC6BNuC,E,4MA3BXrE,MAAQ,G,EAGRqD,aAAe,SAAAC,GAAC,OAAI,EAAK3C,SAAL,eAAgB2C,EAAEhD,OAAOE,KAAO8C,EAAEhD,OAAOiD,S,EAE7DC,aAAe,SAACF,GACZA,EAAEG,iBACDpB,EAAQO,MAAM,EAAK5C,OAAO0D,MAAK,SAAAhB,GAC5B,EAAKjC,MAAMkD,QAAX,eAAuBjB,EAAKkB,UAC7BC,OAAM,gBAAGC,EAAH,EAAGA,SAAH,OAAkB1D,QAAQ2D,MAAMD,EAASF,SAClD,EAAKnD,MAAMuD,QAAQC,KAAK,M,uDAGxB,OACI,kBAAC,WAAD,KACI,qCACA,0BAAMC,SAAUtD,KAAK4C,cACjB,2BAAOhD,KAAK,QAAQ2D,KAAK,QAAQC,SAAUxD,KAAKyC,eAChD,6BACA,2BAAO7C,KAAK,WAAW2D,KAAK,WAAWC,SAAUxD,KAAKyC,eACtD,2BAAOc,KAAK,SAASZ,MAAM,iB,GAtB3BzB,a,kCCsKLwC,EA7JC,SAAC7D,GAMb,IAAI8D,EAAU9D,EAAMiC,KAAK8B,gBACrBC,EAAQhE,EAAMiC,KAAKgC,cASnB,YAAeC,IAAZJ,EAEC,oCACA,yBAAKpD,UAAU,kBACX,4CACA,kBAACK,EAAA,EAAD,CAAQL,UAAU,iBAAiBO,KAAK,KAAKD,QAAQ,eAAeI,QAnBhF,WACI+C,OAAOC,SAASC,QAAO,KAkBf,YAGJ,kBAAChE,EAAA,EAAD,CAAWC,MAAM,MACb,kBAACC,EAAA,EAAD,KACI,6BACI,wBAAIG,UAAU,wBAAd,sBACA,wBAAIA,UAAU,2BACboD,EAAQQ,KAAI,SAAAC,GACT,OACI,kBAAC/D,EAAA,EAAD,KACI,oCACA,yBAAKE,UAAU,kBACP,yBAAKA,UAAU,oBACX,4BAAK6D,EAAgBC,eACrB,kBAACzD,EAAA,EAAD,CAAQL,UAAU,gBAAgBO,KAAK,KAAKD,QAAQ,kBAApD,oBAEJ,yBAAKN,UAAU,oBAEX,kBAACK,EAAA,EAAD,CAAQL,UAAU,gBAAgBO,KAAK,KAAKD,QAAQ,gBAApD,qBAGR,yBAAKN,UAAU,cACX,iDAAsB,gCAAS6D,EAAgBE,aAEnD,yBAAK/D,UAAU,eACX,2CAAgB,4BAAK6D,EAAgBG,eAArC,YAAiE,4BAAKH,EAAgBI,eAE9F,kBAACC,EAAA,EAAD,CAAWC,iBAAiB,KAC5B,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACA,kBAACH,EAAA,EAAUI,OAAX,CAAkBC,GAAIlE,IAAQC,QAAQ,OAAOkE,SAAS,KAAtD,iCAIA,kBAACN,EAAA,EAAUO,SAAX,CAAoBD,SAAS,KAC7B,kBAACJ,EAAA,EAAKM,KAAN,KACA,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACvE,KAAK,MACvB,+BACI,4BACI,mCACA,sDAGPsD,EAAgBpB,KAAKmB,KAAI,SAACmB,EAASC,GACpC,OACI,oCACI,+BACI,4BACI,wBAAIC,QAAQ,KAAKD,GACjB,wBAAIC,QAAQ,KAAKF,oBAejE,6BACI,wBAAI/E,UAAU,wBAAd,uBACA,wBAAIA,UAAU,2BACTsD,EAAMM,KAAI,SAAAsB,GACP,OACI,kBAACpF,EAAA,EAAD,KACI,oCACA,yBAAKE,UAAU,kBACP,yBAAKA,UAAU,oBACX,4BAAKkF,EAAapB,eAClB,kBAACzD,EAAA,EAAD,CAAQL,UAAU,gBAAgBO,KAAK,KAAKD,QAAQ,kBAApD,oBAEJ,yBAAKN,UAAU,oBAEX,kBAACK,EAAA,EAAD,CAAQL,UAAU,gBAAgBO,KAAK,KAAKD,QAAQ,gBAApD,qBAGR,yBAAKN,UAAU,cACX,iDAAsB,gCAASkF,EAAanB,aAEhD,yBAAK/D,UAAU,eACX,2CAAgB,4BAAKkF,EAAalB,eAAlC,YAA8D,4BAAKkB,EAAajB,cAChF,kBAACC,EAAA,EAAD,CAAWC,iBAAiB,KAC5B,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,KACA,kBAACH,EAAA,EAAUI,OAAX,CAAkBC,GAAIlE,IAAQC,QAAQ,OAAOkE,SAAS,KAAtD,iCAIA,kBAACN,EAAA,EAAUO,SAAX,CAAoBD,SAAS,KAC7B,kBAACJ,EAAA,EAAKM,KAAN,KACA,kBAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACvE,KAAK,MAC/B,+BACI,4BACI,mCACA,sDAGP2E,EAAazC,KAAKmB,KAAI,SAACmB,EAASC,GACjC,OACI,oCACI,+BACI,4BACI,wBAAIC,QAAQ,KAAKD,GACjB,wBAAIC,QAAQ,KAAKF,wBAoB1EzF,EAAMiC,KAAK4D,MAGX,iDAFA,4BAAI,uBAAG1E,KAAK,WAAR,UAAJ,qB,wKCojBA2E,I,mNAhsBXvG,MAAQ,CACJwG,aAAc,GACdC,aAAc,GACdC,UAAW,GACXC,UAAW,GACXC,aAAc,GACdC,iBAAkB,GAClBC,UAAW,GACXC,oBAAqB,GACrBC,eAAgBC,IAAMC,YACtBC,UAAMxC,EACNyC,kBAAkB,EAClBC,gBAAgB,G,EAuDlBC,kBAAoB,WAChBlH,QAAQC,IAAI,EAAKL,MAAMwG,aAAa,M,EAIxCe,kBAAoB,WAGhB,IAFA,IAAIC,EAAW,YAAO,EAAKxH,MAAMyG,cAC7BgB,EAAM,EACFtB,EAAE,EAAGA,EAAEqB,EAAYE,OAAQvB,IACjCsB,GAASE,OAAOH,EAAYrB,IAE9B,IAAIyB,EAAMH,EAAQD,EAAYE,OAC9BtH,QAAQC,IAAI,UAAWuH,GACvB,IAAIC,EAAaC,KAAKC,MAAMH,GAC5B,OAAGC,GAAc,EAEX,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,aAAaF,IAAK2G,MAClC,0BAAMzG,GAAG,6BAAT,KAAwCsG,EAAxC,OAKA,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,WAAWF,IAAK4G,MAChC,0BAAM1G,GAAG,6BAAT,MAAyCsG,EAAzC,Q,EAKVK,gBAAkB,WAGhB,IAFA,IAAIC,EAAS,YAAO,EAAKnI,MAAM2G,WAC3Bc,EAAM,EACFtB,EAAE,EAAGA,EAAEgC,EAAUT,OAAQvB,IAC/BsB,GAASE,OAAOQ,EAAUhC,IAE5B,IAAIyB,EAAMH,EAAQU,EAAUT,OAC5BtH,QAAQC,IAAI,UAAWuH,GACvB,IAAIC,EAAaC,KAAKC,MAAMH,GAC5B,OAAGC,GAAc,EAEX,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,aAAaF,IAAK2G,MAClC,0BAAMzG,GAAG,6BAAT,KAAwCsG,EAAxC,OAKA,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,WAAWF,IAAK4G,MAChC,0BAAM1G,GAAG,6BAAT,MAAyCsG,EAAzC,Q,EAKRO,kBAAoB,WAGlB,IAFA,IAAIC,EAAW,YAAO,EAAKrI,MAAM4G,cAC7Ba,EAAM,EACFtB,EAAE,EAAGA,EAAEkC,EAAYX,OAAQvB,IACjCsB,GAASE,OAAOU,EAAYlC,IAE9B,IAAIyB,EAAMH,EAAQY,EAAYX,OACtBG,EAAaC,KAAKC,MAAMH,GAC9B,OAAGC,GAAc,EAEX,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,aAAaF,IAAK2G,MAClC,0BAAMzG,GAAG,6BAAT,KAAwCsG,EAAxC,OAKA,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,WAAWF,IAAK4G,MAChC,0BAAM1G,GAAG,6BAAT,MAAyCsG,EAAzC,Q,EAKVS,sBAAwB,WAGtB,IAFA,IAAIC,EAAe,YAAO,EAAKvI,MAAM6G,kBACjCY,EAAM,EACFtB,EAAE,EAAGA,EAAEoC,EAAgBb,OAAQvB,IACrCsB,GAASE,OAAOY,EAAgBpC,IAElC,IAAIyB,EAAMH,EAAQc,EAAgBb,OACtBG,EAAaC,KAAKC,MAAMH,GAClC,OAAGC,GAAc,EAEX,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,aAAaF,IAAK2G,MAClC,0BAAMzG,GAAG,6BAAT,KAAwCsG,EAAxC,OAKA,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,WAAWF,IAAK4G,MAChC,0BAAM1G,GAAG,6BAAT,MAAyCsG,EAAzC,Q,EAKVW,yBAA2B,WAGzB,IAFA,IAAIC,EAAkB,YAAO,EAAKzI,MAAM+G,qBACpCU,EAAM,EACFtB,EAAE,EAAGA,EAAEsC,EAAmBf,OAAQvB,IACxCsB,GAASE,OAAOc,EAAmBtC,IAErC,IAAIyB,EAAMH,EAAQgB,EAAmBf,OAC7BG,EAAaC,KAAKC,MAAMH,GAC9B,OAAGC,GAAc,EAEX,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,aAAaF,IAAK2G,MAClC,0BAAMzG,GAAG,6BAAT,KAAwCsG,EAAxC,OAKA,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,WAAWF,IAAK4G,MAChC,0BAAM1G,GAAG,6BAAT,MAAyCsG,EAAzC,Q,EAKVa,eAAiB,WAGf,IAFA,IAAIC,EAAQ,YAAO,EAAK3I,MAAM8G,WAC1BW,EAAM,EACFtB,EAAE,EAAGA,EAAEwC,EAASjB,OAAQvB,IAC9BsB,GAASE,OAAOgB,EAASxC,IAE3B,IAAIyB,EAAMH,EAAQkB,EAASjB,OACnBG,EAAaC,KAAKC,MAAMH,GAC9B,OAAGC,GAAc,EAEX,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,aAAaF,IAAK2G,MAClC,0BAAMzG,GAAG,6BAAT,KAAwCsG,EAAxC,OAKA,yBAAK1G,UAAU,0BACf,yBAAKC,IAAI,IAAIG,GAAG,WAAWF,IAAK4G,MAChC,0BAAM1G,GAAG,6BAAT,MAAyCsG,EAAzC,Q,EAOVe,yBAA2B,WAEzB,IADA,IAAIhF,EAAO,GACHuC,EAAE,EAAGA,EAAE,GAAIA,IACfvC,EAAKK,KAAK,CAAC4E,EAAG1C,EAAG2C,EAAGnB,OAAO,EAAK3H,MAAMyG,aAAaN,IAAK4C,MAAM,GAAD,OAAKpB,OAAO,EAAK3H,MAAMyG,aAAaN,OAErG,OACI,yBAAKhF,UAAU,WACb,kBAAC,IAAD,CAAc6H,cAAe,IACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,eAAa,EAACC,WAAY,SAACL,GAAD,iBAAYA,MACnD,kBAAC,IAAD,CAAaI,eAAe,IAC5B,kBAAC,IAAD,CAAYE,MAAO,CAAEvF,KAAM,CAAEwF,KAAM,YAAeC,UAAU,QAAQzF,KAAMA,EAAMiF,EAAE,IAAIC,EAAE,IAAIQ,OAAQ,CAACT,EAAG,CAAC,EAAG,IAAKC,EAAG,EAAE,GAAI,KAC1HS,eAAgB,kBAAC,IAAD,MAChBC,OAAQ,CAAC,CACPlJ,OAAQ,OACRmJ,cAAe,CACbC,YAAa,WACX,MAAO,CACL,CACEpJ,OAAQ,OACRqJ,SAAU,iBAAO,CAACR,MAAO,CAACC,KAAM,YAC/B,CACD9I,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,OAIjCC,WAAY,WACV,MAAO,CACL,CACEvJ,OAAQ,OACRqJ,SAAU,cACT,CACDrJ,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,e,EAYjDE,eAAiB,WAEf,IADA,IAAIlG,EAAO,GACHuC,EAAE,EAAGA,EAAE,GAAIA,IACfvC,EAAKK,KAAK,CAAC4E,EAAG1C,EAAG2C,EAAGnB,OAAO,EAAK3H,MAAM2G,UAAUR,IAAK4C,MAAM,GAAD,OAAKpB,OAAO,EAAK3H,MAAM2G,UAAUR,OAE/F,OACI,yBAAKhF,UAAU,SACb,kBAAC,IAAD,CAAc6H,cAAe,IACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,eAAa,EAACC,WAAY,SAACL,GAAD,iBAAYA,MACnD,kBAAC,IAAD,CAAaI,eAAe,IAC5B,kBAAC,IAAD,CAAYE,MAAO,CAAEvF,KAAM,CAAEwF,KAAM,YAAeC,UAAU,QAAQzF,KAAMA,EAAMiF,EAAE,IAAIC,EAAE,IAAIQ,OAAQ,CAACT,EAAG,CAAC,EAAG,IAAKC,EAAG,EAAE,GAAI,KAC1HS,eAAgB,kBAAC,IAAD,MAChBC,OAAQ,CAAC,CACPlJ,OAAQ,OACRmJ,cAAe,CACbC,YAAa,WACX,MAAO,CACL,CACEpJ,OAAQ,OACRqJ,SAAU,iBAAO,CAACR,MAAO,CAACC,KAAM,YAC/B,CACD9I,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,OAIjCC,WAAY,WACV,MAAO,CACL,CACEvJ,OAAQ,OACRqJ,SAAU,cACT,CACDrJ,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,e,EAWjDG,iBAAmB,WAEjB,IADA,IAAInG,EAAO,GACHuC,EAAE,EAAGA,EAAE,GAAIA,IACfvC,EAAKK,KAAK,CAAC4E,EAAG1C,EAAG2C,EAAGnB,OAAO,EAAK3H,MAAM4G,aAAaT,IAAK4C,MAAM,GAAD,OAAKpB,OAAO,EAAK3H,MAAM4G,aAAaT,OAErG,OACI,yBAAKhF,UAAU,WACb,kBAAC,IAAD,CAAc6H,cAAe,IACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,eAAa,EAACC,WAAY,SAACL,GAAD,iBAAYA,MACnD,kBAAC,IAAD,CAAaI,eAAe,IAC5B,kBAAC,IAAD,CAAYE,MAAO,CAAEvF,KAAM,CAAEwF,KAAM,YAAeC,UAAU,QAAQzF,KAAMA,EAAMiF,EAAE,IAAIC,EAAE,IAAIQ,OAAQ,CAACT,EAAG,CAAC,EAAG,IAAKC,EAAG,EAAE,GAAI,KAC1HS,eAAgB,kBAAC,IAAD,MAChBC,OAAQ,CAAC,CACPlJ,OAAQ,OACRmJ,cAAe,CACbC,YAAa,WACX,MAAO,CACL,CACEpJ,OAAQ,OACRqJ,SAAU,iBAAO,CAACR,MAAO,CAACC,KAAM,YAC/B,CACD9I,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,OAIjCC,WAAY,WACV,MAAO,CACL,CACEvJ,OAAQ,OACRqJ,SAAU,cACT,CACDrJ,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,e,EAYjDI,qBAAuB,WAErB,IADA,IAAIpG,EAAO,GACHuC,EAAE,EAAGA,EAAE,GAAIA,IACfvC,EAAKK,KAAK,CAAC4E,EAAG1C,EAAG2C,EAAGnB,OAAO,EAAK3H,MAAM6G,iBAAiBV,IAAK4C,MAAM,GAAD,OAAKpB,OAAO,EAAK3H,MAAM6G,iBAAiBV,OAE7G,OACI,yBAAKhF,UAAU,eACb,kBAAC,IAAD,CAAc6H,cAAe,IACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,eAAa,EAACC,WAAY,SAACL,GAAD,iBAAYA,MACnD,kBAAC,IAAD,CAAaI,eAAe,IAC5B,kBAAC,IAAD,CAAYE,MAAO,CAAEvF,KAAM,CAAEwF,KAAM,YAAeC,UAAU,QAAQzF,KAAMA,EAAMiF,EAAE,IAAIC,EAAE,IAAIQ,OAAQ,CAACT,EAAG,CAAC,EAAG,IAAKC,EAAG,EAAE,GAAI,KAC1HS,eAAgB,kBAAC,IAAD,MAChBC,OAAQ,CAAC,CACPlJ,OAAQ,OACRmJ,cAAe,CACbC,YAAa,WACX,MAAO,CACL,CACEpJ,OAAQ,OACRqJ,SAAU,iBAAO,CAACR,MAAO,CAACC,KAAM,YAC/B,CACD9I,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,OAIjCC,WAAY,WACV,MAAO,CACL,CACEvJ,OAAQ,OACRqJ,SAAU,cACT,CACDrJ,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,e,EAYjDK,wBAA0B,WAExB,IADA,IAAIrG,EAAO,GACHuC,EAAE,EAAGA,EAAE,GAAIA,IACfvC,EAAKK,KAAK,CAAC4E,EAAG1C,EAAG2C,EAAGnB,OAAO,EAAK3H,MAAM+G,oBAAoBZ,IAAK4C,MAAM,GAAD,OAAKpB,OAAO,EAAK3H,MAAM+G,oBAAoBZ,OAEnH,OACI,yBAAKhF,UAAU,mBACb,kBAAC,IAAD,CAAc6H,cAAe,IACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,eAAa,EAACC,WAAY,SAACL,GAAD,iBAAYA,MACnD,kBAAC,IAAD,CAAaI,eAAe,IAC5B,kBAAC,IAAD,CAAYE,MAAO,CAAEvF,KAAM,CAAEwF,KAAM,YAAeC,UAAU,QAAQzF,KAAMA,EAAMiF,EAAE,IAAIC,EAAE,IAAIQ,OAAQ,CAACT,EAAG,CAAC,EAAG,IAAKC,EAAG,EAAE,GAAI,KAC1HS,eAAgB,kBAAC,IAAD,MAChBC,OAAQ,CAAC,CACPlJ,OAAQ,OACRmJ,cAAe,CACbC,YAAa,WACX,MAAO,CACL,CACEpJ,OAAQ,OACRqJ,SAAU,iBAAO,CAACR,MAAO,CAACC,KAAM,YAC/B,CACD9I,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,OAIjCC,WAAY,WACV,MAAO,CACL,CACEvJ,OAAQ,OACRqJ,SAAU,cACT,CACDrJ,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,e,EAYjDM,cAAgB,WAEd,IADA,IAAItG,EAAO,GACHuC,EAAE,EAAGA,EAAE,GAAIA,IACfvC,EAAKK,KAAK,CAAC4E,EAAG1C,EAAG2C,EAAGnB,OAAO,EAAK3H,MAAM8G,UAAUX,IAAK4C,MAAM,GAAD,OAAKpB,OAAO,EAAK3H,MAAM8G,UAAUX,OAE/F,OACI,yBAAKhF,UAAU,QACb,kBAAC,IAAD,CAAc6H,cAAe,IACzB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAaC,eAAa,EAACC,WAAY,SAACL,GAAD,iBAAYA,MACnD,kBAAC,IAAD,CAAaI,eAAe,IAC5B,kBAAC,IAAD,CAAYE,MAAO,CAAEvF,KAAM,CAAEwF,KAAM,YAAeC,UAAU,QAAQzF,KAAMA,EAAMiF,EAAE,IAAIC,EAAE,IAAIQ,OAAQ,CAACT,EAAG,CAAC,EAAG,IAAKC,EAAG,EAAE,GAAI,KAC1HS,eAAgB,kBAAC,IAAD,MAChBC,OAAQ,CAAC,CACPlJ,OAAQ,OACRmJ,cAAe,CACbC,YAAa,WACX,MAAO,CACL,CACEpJ,OAAQ,OACRqJ,SAAU,iBAAO,CAACR,MAAO,CAACC,KAAM,YAC/B,CACD9I,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,OAIjCC,WAAY,WACV,MAAO,CACL,CACEvJ,OAAQ,OACRqJ,SAAU,cACT,CACDrJ,OAAQ,SACRqJ,SAAU,iBAAO,CAAEC,QAAQ,e,EAYjDO,gB,sBAAkB,8BAAA5H,EAAA,6DACZ6H,EAAc,CAAC,EAAKpK,MAAMyG,aAAc,EAAKzG,MAAM+C,WAAY,EAAK/C,MAAMqK,UAAW,EAAKrK,MAAMsK,SADpF,SAEGjI,EAAQa,sBAAsBkH,GAFjC,OAETG,EAFS,OAGZnK,QAAQC,IAAI,wCAAyCkK,GACrD,EAAK5J,SAAS,CACV6J,kBAAmBD,EAAI3G,KACvBwD,kBAAkB,IANV,2C,EAUlBqD,c,sBAAgB,8BAAAlI,EAAA,6DACVmI,EAAY,CAAC,EAAK1K,MAAM2G,UAAW,EAAK3G,MAAM+C,WAAY,EAAK/C,MAAMqK,UAAW,EAAKrK,MAAMsK,SADjF,SAEKjI,EAAQc,oBAAoBuH,GAFjC,OAEPH,EAFO,OAGVnK,QAAQC,IAAI,sCAAuCkK,GACnD,EAAK5J,SAAS,CACV6J,kBAAmBD,EAAI3G,KACvByD,gBAAgB,IANV,2C,EAUhBsD,kBAAoB,WAClB,EAAKhK,SAAS,CACVyG,kBAAkB,K,EAGxBwD,gBAAkB,WAChB,EAAKjK,SAAS,CACV0G,gBAAgB,K,kNA3fpBjH,QAAQC,IAAIO,KAAKoG,gB,SAGD3E,EAAQS,mBAAmBlC,KAAKH,MAAMsC,Y,OAAlDwH,E,OACAM,E,YAAcN,EAAI3G,KAAKkH,YACvBC,EAAqBF,EAAQG,MAAMH,EAAQnD,OAAO,GAAImD,EAAQnD,OAAO,GAGrEjB,EAAesE,EAAmBhG,KAAI,SAAAkG,GACxC,OAAOC,SAASD,EAAcE,sDAE5BzE,EAAYqE,EAAmBhG,KAAI,SAAAkG,GACrC,OAAOA,EAAcG,QAEnBzE,EAAYoE,EAAmBhG,KAAI,SAAAkG,GACrC,OAAOA,EAAcI,sCAEnBzE,EAAemE,EAAmBhG,KAAI,SAAAkG,GACxC,OAAOA,EAAcK,iDAEnBzE,EAAmBkE,EAAmBhG,KAAI,SAAAkG,GAC5C,OAAOA,EAAcM,4CAEnBxE,EAAsBgE,EAAmBhG,KAAI,SAAAkG,GAC/C,OAAOA,EAAcO,sDAEnB1E,EAAYiE,EAAmBhG,KAAI,SAAAkG,GACrC,OAAOA,EAAcQ,gDAEQ9G,IAA3B4F,EAAI3G,KAAKkH,WAAW,KACpBP,EAAI3G,KAAKkH,WAAW,GAAK,qBACzBP,EAAI3G,KAAKkH,WAAW,IAAM,aAC1BP,EAAI3G,KAAKkH,WAAW,IAAM,cAE9BlK,KAAKD,SAAS,CACZ6F,aAAc+D,EAAI3G,KAAKkH,WACvB/H,WAAYwH,EAAI3G,KAAKkH,WAAW,GAAGY,aACnCrB,UAAWE,EAAI3G,KAAKkH,WAAW,IAAIM,KACnCd,QAASC,EAAI3G,KAAKkH,WAAW,IAAIM,KACjC1E,UAAWA,EACXD,aAAcA,EACdE,UAAWA,EACXC,aAAcA,EACdC,iBAAkBA,EAClBE,oBAAqBA,EACrBD,UAAWA,IAGb6E,YAAW,WACP,EAAKhL,SAAS,CAAEwG,MAAM,MACnB,K,sIA6cC,IAAD,OAGP,OAFA/G,QAAQC,IAAI,0DAA2DO,KAAKZ,OAEzEY,KAAKZ,MAAM+C,WAEN,6BACI,yBAAK5B,UAAU,iBACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,kBAAkBP,KAAKZ,MAAM+C,WAA3C,qBAEJ,yBAAK5B,UAAU,mBACf,yBAAKA,UAAU,oBAEnB,6BACMP,KAAKZ,MAAMmH,KAGT,kBAACrG,EAAA,EAAD,CAAWC,MAAM,MACjB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,yBAAKE,UAAU,2BACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,wBAAd,WAA6C,6BAA7C,eAEJ,yBAAKA,UAAU,0BACVP,KAAK2G,oBACN,yBAAKpG,UAAU,0BACX,yBAAKC,IAAI,IAAIC,IAAKuK,IAAerK,GAAG,wBACpC,yBAAKJ,UAAU,uBAAf,uEAAyG,uBAAGS,KAAK,4CAAR,0BAAzG,aAGJ,yBAAKT,UAAU,mBACf,kBAAC0K,EAAA,EAAD,CAAO1K,UAAU,aAAa2K,KAAMlL,KAAKZ,MAAMoH,iBAAkB2E,aAAW,EAACtK,QAAQ,UAAUI,QAASjB,KAAK+J,mBAA7G,UAAuI,kBAAC,OAAD,CAAM9J,GAAG,YAAT,6BACvI,wBAAIM,UAAU,oBACd,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,iBAAd,wCACA,0BAAMA,UAAU,aAAaP,KAAKZ,MAAMqK,UAAxC,YAA4DzJ,KAAKZ,MAAMsK,SACvE,6BACA,kBAAC9I,EAAA,EAAD,CAAQD,GAAG,cAAcG,KAAK,KAAKD,QAAQ,eAAeI,QAAS,kBAAM,EAAKsI,oBAA9E,iBAAwH,KAGxH,yBAAKhJ,UAAU,sBACVP,KAAKgI,+BAKtB,yBAAKzH,UAAU,gBACX,yBAAKA,UAAU,uBACX,wBAAIA,UAAU,sBAAd,SAAyC,6BAAzC,mBAEJ,yBAAKA,UAAU,0BACVP,KAAKsH,kBACN,yBAAK/G,UAAU,0BACX,yBAAKC,IAAI,IAAIC,IAAKuK,IAAerK,GAAG,wBACpC,yBAAKJ,UAAU,uBAAf,uEAAyG,uBAAGS,KAAK,4CAAR,0BAAzG,aAEJ,yBAAKT,UAAU,mBACf,kBAAC0K,EAAA,EAAD,CAAO1K,UAAU,aAAa2K,KAAMlL,KAAKZ,MAAMqH,eAAgB0E,aAAW,EAACtK,QAAQ,UAAUI,QAASjB,KAAKgK,iBAA3G,UAAmI,kBAAC,OAAD,CAAM/J,GAAG,YAAT,6BAC/H,wBAAIM,UAAU,oBACd,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,iBAAd,sCACA,0BAAMA,UAAU,aAAaP,KAAKZ,MAAMqK,UAAxC,YAA4DzJ,KAAKZ,MAAMsK,SACvE,6BACA,kBAAC9I,EAAA,EAAD,CAAQD,GAAG,cAAcG,KAAK,KAAKD,QAAQ,eAAeI,QAAS,kBAAM,EAAK4I,kBAA9E,iBAAsH,KAE1H,yBAAKtJ,UAAU,sBACX,6BACCP,KAAKkJ,sBAM1B,yBAAK3I,UAAU,0BACH,yBAAKA,UAAU,iCACX,wBAAIA,UAAU,gCAAd,YAAsD,6BAAtD,aAEJ,yBAAKA,UAAU,0BACVP,KAAK4H,2BACN,yBAAKrH,UAAU,0BACX,yBAAKC,IAAI,IAAIC,IAAKuK,IAAerK,GAAG,wBACpC,yBAAKJ,UAAU,uBAAf,uEAAyG,uBAAGS,KAAK,4CAAR,0BAAzG,aAEJ,yBAAKT,UAAU,mBACX,wBAAIA,UAAU,oBACd,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,iBAAd,uCACA,0BAAMA,UAAU,aAAaP,KAAKZ,MAAMqK,UAAxC,YAA4DzJ,KAAKZ,MAAMsK,SACvE,6BACA,kBAAC9I,EAAA,EAAD,CAAQD,GAAG,cAAcG,KAAK,KAAKD,QAAQ,gBAA3C,iBAAiF,KAErF,yBAAKN,UAAU,sBACVP,KAAKqJ,+BAMhC,kBAAChJ,EAAA,EAAD,KACA,yBAAKE,UAAU,2BACL,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,sBAAd,WAA2C,6BAA3C,YAEJ,yBAAKA,UAAU,0BACVP,KAAKwH,oBACN,yBAAKjH,UAAU,0BACX,yBAAKC,IAAI,IAAIC,IAAKuK,IAAerK,GAAG,wBACpC,yBAAKJ,UAAU,uBAAf,uEAAyG,uBAAGS,KAAK,4CAAR,0BAAzG,aAEJ,yBAAKT,UAAU,mBACX,wBAAIA,UAAU,oBACd,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,iBAAd,qCACA,0BAAMA,UAAU,aAAaP,KAAKZ,MAAMqK,UAAxC,YAA4DzJ,KAAKZ,MAAMsK,SACvE,6BACA,kBAAC9I,EAAA,EAAD,CAAQD,GAAG,cAAcG,KAAK,KAAKD,QAAQ,gBAA3C,iBAAiF,KAErF,yBAAKN,UAAU,sBACVP,KAAKmJ,uBAKtB,yBAAK5I,UAAU,eACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,sBAAd,QAAwC,6BAAxC,eAEJ,yBAAKA,UAAU,0BACVP,KAAK8H,iBACN,yBAAKvH,UAAU,0BACX,yBAAKC,IAAI,IAAIC,IAAKuK,IAAerK,GAAG,wBACpC,yBAAKJ,UAAU,uBAAf,uEAAyG,uBAAGS,KAAK,4CAAR,0BAAzG,aAEJ,yBAAKT,UAAU,mBACX,wBAAIA,UAAU,oBACd,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,iBAAd,qCACA,0BAAMA,UAAU,aAAaP,KAAKZ,MAAMqK,UAAxC,YAA4DzJ,KAAKZ,MAAMsK,SACvE,6BACA,kBAAC9I,EAAA,EAAD,CAAQD,GAAG,cAAcG,KAAK,KAAKD,QAAQ,gBAA3C,iBAAiF,KAErF,yBAAKN,UAAU,sBACVP,KAAKsJ,wBAlItC,kBAAC,KAAD,CAAc3I,GAAG,cAAc4C,KAAM,OAAQ6H,MAAO,YAkJ5D,6BACI,yBAAK7K,UAAU,iBACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,kBAAkBP,KAAKZ,MAAM+C,WAA3C,sBAGR,yBAAK5B,UAAU,mCACX,sCAAW,kBAAC,OAAD,CAAMN,GAAG,KAAT,YAAX,iC,GAzrBKiB,cCLdmK,G,uKARP,OACI,6BACI,kBAAC,GAAD,CAAgBlJ,WAAYnC,KAAKH,MAAMsC,WAAYY,QAAS/C,KAAKH,MAAMkD,UAAWjB,KAAM9B,KAAKH,MAAMiC,Y,GAN9FZ,aC6FNoK,G,4MA/EblM,MAAQ,G,EAOR2D,QAAU,SAACjB,GAAD,OAAU,EAAK/B,SAAS+B,I,EAClCG,O,sBAAS,4BAAAN,EAAA,sEACSF,EAAQQ,SADjB,OACH0H,EADG,OAEPnK,QAAQC,IAAIkK,GACZ,EAAK5G,QAAQ,CAAC2C,MAAM,KAAM6F,UAAW,KAAMC,UAAW,KAAMC,IAAK,OAH1D,2C,EAKT3L,UAAY,SAACqC,GACX3C,QAAQC,IAAI0C,GACZ,EAAKpC,SAAS,CACZoC,gB,kMAdeV,EAAQC,a,OAArBI,E,OAGJ9B,KAAKD,SAAL,eAAkB+B,EAAKkB,O,qIAchB,IAAD,OACN,OACA,kBAAC,gBAAD,KACA,0BAAMhC,KAAK,yFAAyFD,IAAI,eACxG,0BAAMC,KAAK,iEAAiED,IAAI,eAC9E,0BACEA,IAAI,aACJC,KAAK,wEACL0K,UAAU,0EACVC,YAAY,cAEd,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MACxB,kBAACF,EAAA,EAAOG,MAAR,CAAc/K,KAAK,IAAIL,GAAG,iBAA1B,gBACA,kBAACiL,EAAA,EAAO/G,OAAR,CAAemH,gBAAc,qBAC7B,kBAACJ,EAAA,EAAO5G,SAAR,CAAiBrE,GAAG,oBACpB,kBAACsL,EAAA,EAAD,CAAK1L,UAAU,WACdP,KAAKZ,MAAMsG,MACZ,kBAAC,WAAD,KACE,kBAACuG,EAAA,EAAIC,KAAL,KACE,kBAACD,EAAA,EAAIE,KAAL,CAAUlL,QAASjB,KAAKiC,OAAQjB,KAAK,MAArC,YAEF,kBAACiL,EAAA,EAAIC,KAAL,KACA,kBAAC,gBAAD,CAAejM,GAAG,YAChB,kBAACgM,EAAA,EAAIE,KAAL,mBAKJ,kBAAC,WAAD,KACE,kBAACF,EAAA,EAAIC,KAAL,KACE,kBAAC,UAAD,CAASjM,GAAG,WAAWU,GAAG,gBAA1B,YAEF,kBAACsL,EAAA,EAAIC,KAAL,KACE,kBAAC,UAAD,CAASjM,GAAG,UAAUU,GAAG,eAAzB,aAKHX,KAAKZ,MAAMsG,MACR,kBAACuG,EAAA,EAAD,CAAKG,QAAM,GACT,6CAAkB,kBAAC,UAAD,CAASnM,GAAG,YAAYD,KAAKZ,MAAMsG,SAGzD,gCAIJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2G,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC1M,GAAD,OAAW,kBAAC,EAAD,iBAAUA,EAAV,CAAiBC,UAAW,EAAKA,gBAC1E,kBAAC,IAAD,CAAOuM,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAC1M,GAAD,OAAS,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBkD,QAAS,EAAKA,cAC/E,kBAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAAC1M,GAAD,OAAW,kBAAC,EAAD,iBAAWA,EAAX,CAAkBkD,QAAS,EAAKA,cAC/E,kBAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,WAAWC,OAAQ,SAAC1M,GAAD,OAAW,kBAAC,EAAD,iBAAaA,EAAb,CAAoBiC,KAAM,EAAK1C,YAC/E,kBAAC,IAAD,CAAOiN,OAAK,EAACC,KAAK,UAAUC,OAAQ,SAAC1M,GAAD,OAAW,kBAAC,GAAD,iBAAYA,EAAZ,CAAmBiC,KAAM,EAAK1C,MAAO+C,WAAY,EAAK/C,MAAM+C,WAAYY,QAAS,EAAKA,cACrI,kBAAC,IAAD,CAAOsJ,OAAK,EAACC,KAAK,mBAAmBC,OAAQ,SAAC1M,GAAD,OAAW,kBAAC,GAAD,iBAAoBA,EAApB,CAA2BiC,KAAM,EAAK1C,MAAO2D,QAAS,EAAKA,cACnH,kBAAC,IAAD,CAAOyJ,UAAWrL,U,GA1ERD,aCJEuL,QACW,cAA7BzI,OAAOC,SAASyI,UAEe,UAA7B1I,OAAOC,SAASyI,UAEhB1I,OAAOC,SAASyI,SAASC,MACvB,2D,OCVNC,IAASL,OAAO,kBAAC,GAAD,MAASM,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnK,MAAK,SAAAoK,GACjCA,EAAaC,iB,mBEnInBlO,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,6C","file":"static/js/main.49d76670.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mobilityLogo.91cd18c6.png\";","import React, { Component } from 'react';\nimport './Home.css';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport USAMap from \"react-usa-map\";\nimport { Redirect } from 'react-router-dom';\nimport mobilityLogo from '../../assets/images/mobilityLogo.png';\nimport Button from 'react-bootstrap/Button';\n\n\n\nclass Home extends Component {\n\n\n  state = { \n    redirect: null \n  };\n\n  mapHandler = (event) => {\n    console.log(event.target.dataset.name);\n    // console.log(this.props.match.path);\n    this.props.setRegion(event.target.dataset.name);\n    this.setState({\n      redirect: '/region'\n    })\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n    return(\n      <div>\n      <br></br>\n      <Container fluid=\"md\">\n        <Row>\n          <Col>\n          <Jumbotron className=\"jumbotron\">\n          <img alt=\" \" src={mobilityLogo} id=\"mobility-logo\"></img>\n            <div className=\"jumbotron-elements-container\">\n              \n              <div className=\"mobility-container\">\n                {/* <h1 className=\"mobility-mate-header\">MobilityMate</h1> */}\n                <p className=\"about-mobility-mate\">\n                  MobilityMate is a visualization tool based on Google's Mobility Trends report, which details changes in people's movement over time to various public venues such as parks, grocery stores, transit, and more. \n                  <br></br>\n                  <br></br>\n                  We've visualized the ever-changing data to make trends visible at a glance!\n                </p>\n                <Button variant=\"outline-info\" size=\"sm\"><a id=\"google-link\" target='_blank' rel=\"noopener noreferrer\" href=\"https://www.google.com/covid19/mobility/\">Learn more</a></Button>{' '}\n              </div>\n            </div>\n            \n            \n          </Jumbotron>\n            <div>\n              <div className=\"App\">\n                <USAMap onClick={this.mapHandler} />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n\n    </div>\n    )\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import axios from 'axios';\nlet baseURL;\n\nprocess.env.NODE_ENV === 'production'\n  ? (baseURL = 'https://fathomless-everglades-73012.herokuapp.com')\n  // ? (baseURL = window.location.origin)\n  : (baseURL = 'http://localhost:5000');\n\nconst service = axios.create({ withCredentials: true, baseURL });\n\nconst actions = {\n  isLoggedIn: async () => {\n    return await service.get('/is-logged-in')\n  },\n  signUp: async (user) => {\n    return await service.post('/signup', user)\n  },\n  logIn: async (user) => {\n    return await service.post('/login', user)\n  },\n  logOut: async () => {\n    return await service.get('/logout')\n  },\n  returnMobilityData: async (regionName) => {\n    return await service.get('/mobilities', {params: \n      { region: regionName }\n    })\n  },\n  updateUserGroceryData: async (user) => {\n    return await service.post('/saved-grocery-data', user)\n  },\n  updateUserParksData: async (user) => {\n    return await service.post('/saved-parks-data', user)\n  }\n};\n\nexport default actions;\n","import React, { Component, Fragment } from 'react';\nimport actions from '../../services/index'\n\nclass SignUp extends Component {\n    state = {\n\n    } \n    handleChange = e => this.setState({[e.target.name]: e.target.value})\n\n    handleSubmit =  e => {\n        e.preventDefault()\n            actions.signUp(this.state).then(user=> {\n                this.props.setUser({...user.data})  \n            }).catch(({ response }) => console.error(response.data));\n            this.props.history.push('/');\n    }\n    render() {\n        return (\n            <Fragment>\n                <h2>SignUP</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} />\n                    <br></br>\n                    <input name=\"password\" type=\"password\" onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Sign Up\"/>\n                </form>\n            </Fragment>\n        );\n    }\n}\n\nexport default SignUp;","import React, { Component, Fragment } from 'react';\nimport actions from '../../services/index'\n\nclass LogIn extends Component {\n\n    state = {\n\n    } \n    handleChange = e => this.setState({[e.target.name]: e.target.value})\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n         actions.logIn(this.state).then(user => {\n            this.props.setUser({...user.data})  \n        }).catch(({ response }) => console.error(response.data));\n        this.props.history.push('/');\n    }\n    render() {\n        return (\n            <Fragment>\n                <h2>LogIn</h2>\n                <form onSubmit={this.handleSubmit}>\n                    <input name=\"email\" type=\"email\" onChange={this.handleChange} />\n                    <br></br>\n                    <input name=\"password\" type=\"password\" onChange={this.handleChange} />\n                    <input type=\"submit\" value=\"Log In\"/>\n                </form>\n            </Fragment>\n        );\n    }\n}\n\nexport default LogIn;","import React, {useState, useEffect} from 'react';\nimport '../profile/Profile.css';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\n\n\n\nconst Profile = (props) => {\n\n    function refreshPage() {\n        window.location.reload(false);\n      }\n\n    let grocery = props.user.userGroceryData\n    let parks = props.user.userParksData\n\n    // const csvData = [\n    //     [\"day\", \"change\"],\n    //     [\"Ahmed\", \"Tomi\", \"ah@smthing.co.com\"],\n    //     [\"Raed\", \"Labes\", \"rl@smthing.co.com\"],\n    //     [\"Yezzi\", \"Min l3b\", \"ymin@cocococo.com\"]\n    //   ];\n\n        if(grocery !== undefined){\n            return (\n            <>\n            <div className=\"reports-header\">\n                <h1>My Snapshots</h1>\n                <Button className=\"refresh-button\" size=\"sm\" variant=\"outline-info\" onClick={refreshPage}>Refresh</Button>\n            </div>\n            \n            <Container fluid=\"md\">\n                <Row>\n                    <div>\n                        <h3 className=\"saved-reports-header\">Grocery & Pharmacy</h3>\n                        <hr className=\"saved-reports-baseline\"></hr>\n                        {grocery.map(eachGroceryStat => {\n                            return (\n                                <Col>\n                                    <>\n                                    <div className=\"saved-location\">\n                                            <div className=\"delete-container\">\n                                                <h2>{eachGroceryStat.savedLocation}</h2>\n                                                <Button className=\"delete-button\" size=\"sm\" variant=\"outline-danger\">Delete Snapshot</Button>\n                                            </div>\n                                            <div className=\"export-container\">\n                                                \n                                                <Button className=\"export-button\" size=\"sm\" variant=\"outline-info\">Export Snapshot</Button>\n                                            </div>\n                                        </div>\n                                        <div className=\"saved-date\">\n                                            <h5>Snapshot taken on <strong>{eachGroceryStat.savedDate}</strong></h5>\n                                        </div>\n                                        <div className=\"daily-stats\">\n                                            <h5>Data Range: <em>{eachGroceryStat.dataStartDate}</em> through <em>{eachGroceryStat.dataEndDate}</em></h5>\n                                    </div>\n                                    <Accordion defaultActiveKey=\"1\">\n                                    <Card>\n                                        <Card.Header>\n                                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                            View daily data for Snapshot\n                                        </Accordion.Toggle>\n                                        </Card.Header>\n                                        <Accordion.Collapse eventKey=\"0\">\n                                        <Card.Body>\n                                        <Table striped bordered hover size=\"sm\">\n                                                    <thead>\n                                                        <tr>\n                                                            <td>Day</td>\n                                                            <td>Change from Baseline</td>\n                                                        </tr>\n                                                    </thead>\n                                                    {eachGroceryStat.data.map((eachDay, i) => {\n                                                    return(\n                                                        <>\n                                                            <tbody>\n                                                                <tr>\n                                                                    <td colSpan=\"1\">{i}</td>\n                                                                    <td colSpan=\"1\">{eachDay}</td>\n                                                                </tr>\n                                                            </tbody>\n                                                        </>\n                                                    )})}\n                                            </Table>\n                                        </Card.Body>\n                                        </Accordion.Collapse>\n                                    </Card>\n                                    </Accordion>\n                                    </>\n                                </Col>\n                            ) \n                        })}\n                    </div>\n                    <div>\n                        <h3 className=\"saved-reports-header\">Parks & Outdoor Rec</h3>\n                        <hr className=\"saved-reports-baseline\"></hr>\n                            {parks.map(eachParkStat => {\n                                return (\n                                    <Col>\n                                        <> \n                                        <div className=\"saved-location\">\n                                                <div className=\"delete-container\">\n                                                    <h2>{eachParkStat.savedLocation}</h2>\n                                                    <Button className=\"delete-button\" size=\"sm\" variant=\"outline-danger\">Delete Snapshot</Button>\n                                                </div>\n                                                <div className=\"export-container\">\n                                                    \n                                                    <Button className=\"export-button\" size=\"sm\" variant=\"outline-info\">Export Snapshot</Button>\n                                                </div>\n                                                </div>\n                                            <div className=\"saved-date\">\n                                                <h5>Snapshot taken on <strong>{eachParkStat.savedDate}</strong></h5>\n                                            </div>\n                                            <div className=\"daily-stats\">\n                                                <h5>Data Range: <em>{eachParkStat.dataStartDate}</em> through <em>{eachParkStat.dataEndDate}</em></h5>\n                                                <Accordion defaultActiveKey=\"1\">\n                                                <Card>\n                                                    <Card.Header>\n                                                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                                                        View daily data for Snapshot\n                                                    </Accordion.Toggle>\n                                                    </Card.Header>\n                                                    <Accordion.Collapse eventKey=\"0\">\n                                                    <Card.Body>\n                                                    <Table striped bordered hover size=\"sm\">\n                                                        <thead>\n                                                            <tr>\n                                                                <td>Day</td>\n                                                                <td>Change from Baseline</td>\n                                                            </tr>\n                                                        </thead>\n                                                        {eachParkStat.data.map((eachDay, i) => {\n                                                        return(\n                                                            <>\n                                                                <tbody>\n                                                                    <tr>\n                                                                        <td colSpan=\"1\">{i}</td>\n                                                                        <td colSpan=\"1\">{eachDay}</td>\n                                                                    </tr>\n                                                                </tbody>\n                                                            </>\n                                                        )})}\n                                                    </Table>\n                                                    </Card.Body>\n                                                    </Accordion.Collapse>\n                                                </Card>\n                                                </Accordion>\n                                            </div>\n                                        </>\n                                    </Col>\n                                ) \n                            })}\n                    </div>\n                </Row>\n            </Container>\n            </>\n            );\n    } else if(!props.user.email){\n        return <h1><a href='/log-in'>Log in</a> to view Profile</h1>\n    } else {\n        return <h1>\"Loading Data...\"</h1>\n    }\n}\n\nexport default Profile;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport actions from '../../services/index';\nimport './../home/Home.css';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Alert from 'react-bootstrap/Alert';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport '../../../node_modules/react-vis/dist/style.css';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTooltip } from 'victory';\nimport './MobilityTrends.css';\nimport downArrow from '../../assets/images/down_arrow.png';\nimport upArrow from '../../assets/images/up_arrow.png';\nimport smallCalendar from '../../assets/images/small_calendar.jpg';\n// Loading Screen Imports\nimport ReactLoading from \"react-loading\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n\nclass MobilityTrends extends Component {\n\n\n    state = {\n        mobilityData: [],\n        groceryStats: [],\n        dateStats: [],\n        parkStats: [],\n        transitStats: [],\n        residentialStats: [],\n        workStats: [],\n        shoppingDiningStats: [],\n        chartReference: React.createRef(),\n        done: undefined,\n        showAlertGrocery: false,\n        showAlertParks: false\n      }\n      async componentDidMount() {\n        console.log(this.chartReference);\n        \n        // Call backend to retrieve Google Mobility Data\n        let res = await actions.returnMobilityData(this.props.regionName);\n        let rawData = [...res.data.mobilities]\n        let dataLastThirtyDays = rawData.slice(rawData.length-31, rawData.length-1)\n\n        // Map through each data point (i.e., mobility trends in parks, grocery stores, transit centers, etc.) and set values to state.\n        let groceryStats = dataLastThirtyDays.map(eachDataPoint => {\n          return parseInt(eachDataPoint.grocery_and_pharmacy_percent_change_from_baseline)\n        });\n        let dateStats = dataLastThirtyDays.map(eachDataPoint => {\n          return eachDataPoint.date\n        });\n        let parkStats = dataLastThirtyDays.map(eachDataPoint => {\n          return eachDataPoint.parks_percent_change_from_baseline\n        });\n        let transitStats = dataLastThirtyDays.map(eachDataPoint => {\n          return eachDataPoint.transit_stations_percent_change_from_baseline\n        });\n        let residentialStats = dataLastThirtyDays.map(eachDataPoint => {\n          return eachDataPoint.residential_percent_change_from_baseline\n        });\n        let shoppingDiningStats = dataLastThirtyDays.map(eachDataPoint => {\n          return eachDataPoint.retail_and_recreation_percent_change_from_baseline\n        });\n        let workStats = dataLastThirtyDays.map(eachDataPoint => {\n          return eachDataPoint.workplaces_percent_change_from_baseline\n        });\n        if( res.data.mobilities[0] === undefined){\n            res.data.mobilities[0] = 'No region selected';\n            res.data.mobilities[55] = '2020-04-15';\n            res.data.mobilities[84] = '2020-05-15';\n        }\n        this.setState({\n          mobilityData: res.data.mobilities,\n          regionName: res.data.mobilities[0].sub_region_1,\n          dataStart: res.data.mobilities[55].date,\n          dataEnd: res.data.mobilities[84].date,\n          dateStats: dateStats,\n          groceryStats: groceryStats,\n          parkStats: parkStats,\n          transitStats: transitStats,\n          residentialStats: residentialStats,\n          shoppingDiningStats: shoppingDiningStats,\n          workStats: workStats\n        })\n\n        setTimeout(() => {\n            this.setState({ done: true })\n            }, 2000);\n      }\n      displayRegionName = () =>{\n          console.log(this.state.mobilityData[55])          \n      }\n    \n      // Calaculate average trend value, (+) or (-), for last 30 days data\n      getAverageGrocery = () => {\n          let copyGrocery = [...this.state.groceryStats];\n          let total=0;\n          for(let i=0; i<copyGrocery.length; i++){\n            total += Number(copyGrocery[i]);\n          }\n          let avg = total / copyGrocery.length;\n          console.log(\"average\", avg);\n          let roundedAvg = Math.round(avg);\n          if(roundedAvg <= 0){\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"down-arrow\" src={downArrow}></img>\n                <span id=\"trend-percentage-negative\">  {roundedAvg} %</span>\n                </div>\n              )\n          } else {\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"up-arrow\" src={upArrow}></img>\n                <span id=\"trend-percentage-positive\">  +{roundedAvg} %</span>\n                </div>\n            )\n          }\n      }\n      getAverageParks = () => {\n        let copyParks = [...this.state.parkStats];\n        let total=0;\n        for(let i=0; i<copyParks.length; i++){\n          total += Number(copyParks[i]);\n        }\n        let avg = total / copyParks.length;\n        console.log(\"average\", avg);\n        let roundedAvg = Math.round(avg);\n        if(roundedAvg <= 0){\n          return(\n              <div className=\"places-grocery-content\">\n              <img alt=\" \" id=\"down-arrow\" src={downArrow}></img>\n              <span id=\"trend-percentage-negative\">  {roundedAvg} %</span>\n              </div>\n            )\n        } else {\n          return(\n              <div className=\"places-grocery-content\">\n              <img alt=\" \" id=\"up-arrow\" src={upArrow}></img>\n              <span id=\"trend-percentage-positive\">  +{roundedAvg} %</span>\n              </div>\n          )\n        }\n      }\n      getAverageTransit = () => {\n        let copyTransit = [...this.state.transitStats];\n        let total=0;\n        for(let i=0; i<copyTransit.length; i++){\n          total += Number(copyTransit[i]);\n        }\n        let avg = total / copyTransit.length;\n            let roundedAvg = Math.round(avg);\n          if(roundedAvg <= 0){\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"down-arrow\" src={downArrow}></img>\n                <span id=\"trend-percentage-negative\">  {roundedAvg} %</span>\n                </div>\n              )\n          } else {\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"up-arrow\" src={upArrow}></img>\n                <span id=\"trend-percentage-positive\">  +{roundedAvg} %</span>\n                </div>\n            )\n          }\n      }\n      getAverageResidential = () => {\n        let copyResidential = [...this.state.residentialStats];\n        let total=0;\n        for(let i=0; i<copyResidential.length; i++){\n          total += Number(copyResidential[i]);\n        }\n        let avg = total / copyResidential.length;\n                let roundedAvg = Math.round(avg);\n          if(roundedAvg <= 0){\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"down-arrow\" src={downArrow}></img>\n                <span id=\"trend-percentage-negative\">  {roundedAvg} %</span>\n                </div>\n              )\n          } else {\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"up-arrow\" src={upArrow}></img>\n                <span id=\"trend-percentage-positive\">  +{roundedAvg} %</span>\n                </div>\n            )\n          }\n      }\n      getAverageShoppingDining = () => {\n        let copyShoppingDining = [...this.state.shoppingDiningStats];\n        let total=0;\n        for(let i=0; i<copyShoppingDining.length; i++){\n          total += Number(copyShoppingDining[i]);\n        }\n        let avg = total / copyShoppingDining.length;\n            let roundedAvg = Math.round(avg);\n          if(roundedAvg <= 0){\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"down-arrow\" src={downArrow}></img>\n                <span id=\"trend-percentage-negative\">  {roundedAvg} %</span>\n                </div>\n              )\n          } else {\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"up-arrow\" src={upArrow}></img>\n                <span id=\"trend-percentage-positive\">  +{roundedAvg} %</span>\n                </div>\n            )\n          }\n      }\n      getAverageWork = () => {\n        let copyWork = [...this.state.workStats];\n        let total=0;\n        for(let i=0; i<copyWork.length; i++){\n          total += Number(copyWork[i]);\n        }\n        let avg = total / copyWork.length;\n            let roundedAvg = Math.round(avg);\n          if(roundedAvg <= 0){\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"down-arrow\" src={downArrow}></img>\n                <span id=\"trend-percentage-negative\">  {roundedAvg} %</span>\n                </div>\n              )\n          } else {\n            return(\n                <div className=\"places-grocery-content\">\n                <img alt=\" \" id=\"up-arrow\" src={upArrow}></img>\n                <span id=\"trend-percentage-positive\">  +{roundedAvg} %</span>\n                </div>\n            )\n          }\n      }\n\n      // Construct individual graphs for last 30 days trends, for each type of place\n      showGraphGroceryPharmacy = () => {\n        let data = []\n        for(let i=0; i<31; i++){\n            data.push({x: i, y: Number(this.state.groceryStats[i]), label: `${Number(this.state.groceryStats[i])}`})\n        }\n        return (\n            <div className=\"grocery\">\n              <VictoryChart domainPadding={20}>\n                  <VictoryAxis/>\n                  <VictoryAxis dependentAxis tickFormat={(x) => (`%${x}`)}/>\n                  <VictoryAxis dependentAxis={true}/>\n                  <VictoryBar style={{ data: { fill: \"#17a2b8\" } }} alignment=\"start\" data={data} x=\"x\" y=\"y\" domain={{x: [0, 31], y: [-60, 20]}}\n                  labelComponent={<VictoryTooltip/>}\n                  events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => ({style: {fill: \"black\"}})\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: true })\n                          }\n                        ];\n                      },\n                      onMouseOut: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => {}\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: false })\n                          }\n                        ];\n                      }\n                    }\n                  }]}\n                  />\n              </VictoryChart>\n            </div>\n          );\n      }\n    \n      showGraphParks = () => {\n        let data = []\n        for(let i=0; i<31; i++){\n            data.push({x: i, y: Number(this.state.parkStats[i]), label: `${Number(this.state.parkStats[i])}`})\n        }\n        return (\n            <div className=\"parks\">\n              <VictoryChart domainPadding={20}>\n                  <VictoryAxis/>\n                  <VictoryAxis dependentAxis tickFormat={(x) => (`%${x}`)}/>\n                  <VictoryAxis dependentAxis={true}/>\n                  <VictoryBar style={{ data: { fill: \"#17a2b8\" } }} alignment=\"start\" data={data} x=\"x\" y=\"y\" domain={{x: [0, 31], y: [-60, 20]}}\n                  labelComponent={<VictoryTooltip/>}\n                  events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => ({style: {fill: \"black\"}})\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: true })\n                          }\n                        ];\n                      },\n                      onMouseOut: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => {}\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: false })\n                          }\n                        ];\n                      }\n                    }\n                  }]}\n                  />\n              </VictoryChart>\n            </div>\n          );\n      }\n      showGraphTransit = () => {\n        let data = []\n        for(let i=0; i<31; i++){\n            data.push({x: i, y: Number(this.state.transitStats[i]), label: `${Number(this.state.transitStats[i])}`})\n        }\n        return (\n            <div className=\"transit\">\n              <VictoryChart domainPadding={20}>\n                  <VictoryAxis/>\n                  <VictoryAxis dependentAxis tickFormat={(x) => (`%${x}`)}/>\n                  <VictoryAxis dependentAxis={true}/>\n                  <VictoryBar style={{ data: { fill: \"#17a2b8\" } }} alignment=\"start\" data={data} x=\"x\" y=\"y\" domain={{x: [0, 31], y: [-60, 20]}}\n                  labelComponent={<VictoryTooltip/>}\n                  events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => ({style: {fill: \"black\"}})\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: true })\n                          }\n                        ];\n                      },\n                      onMouseOut: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => {}\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: false })\n                          }\n                        ];\n                      }\n                    }\n                  }]}\n                  />\n              </VictoryChart>\n            </div>\n          );\n      }\n    \n      showGraphResidential = () => {\n        let data = []\n        for(let i=0; i<31; i++){\n            data.push({x: i, y: Number(this.state.residentialStats[i]), label: `${Number(this.state.residentialStats[i])}`})\n        }\n        return (\n            <div className=\"residential\">\n              <VictoryChart domainPadding={20}>\n                  <VictoryAxis/>\n                  <VictoryAxis dependentAxis tickFormat={(x) => (`%${x}`)}/>\n                  <VictoryAxis dependentAxis={true}/>\n                  <VictoryBar style={{ data: { fill: \"#17a2b8\" } }} alignment=\"start\" data={data} x=\"x\" y=\"y\" domain={{x: [0, 31], y: [-60, 20]}}\n                  labelComponent={<VictoryTooltip/>}\n                  events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => ({style: {fill: \"black\"}})\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: true })\n                          }\n                        ];\n                      },\n                      onMouseOut: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => {}\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: false })\n                          }\n                        ];\n                      }\n                    }\n                  }]}\n                  />\n              </VictoryChart>\n            </div>\n          );\n      }\n    \n      showGraphShoppingDining = () => {\n        let data = []\n        for(let i=0; i<31; i++){\n            data.push({x: i, y: Number(this.state.shoppingDiningStats[i]), label: `${Number(this.state.shoppingDiningStats[i])}`})\n        }\n        return (\n            <div className=\"shopping-dining\">\n              <VictoryChart domainPadding={20}>\n                  <VictoryAxis/>\n                  <VictoryAxis dependentAxis tickFormat={(x) => (`%${x}`)}/>\n                  <VictoryAxis dependentAxis={true}/>\n                  <VictoryBar style={{ data: { fill: \"#17a2b8\" } }} alignment=\"start\" data={data} x=\"x\" y=\"y\" domain={{x: [0, 31], y: [-60, 20]}}\n                  labelComponent={<VictoryTooltip/>}\n                  events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => ({style: {fill: \"black\"}})\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: true })\n                          }\n                        ];\n                      },\n                      onMouseOut: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => {}\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: false })\n                          }\n                        ];\n                      }\n                    }\n                  }]}\n                  />\n              </VictoryChart>\n            </div>\n          );\n      }\n\n      showGraphWork = () => {\n        let data = []\n        for(let i=0; i<31; i++){\n            data.push({x: i, y: Number(this.state.workStats[i]), label: `${Number(this.state.workStats[i])}`})\n        }\n        return (\n            <div className=\"work\">\n              <VictoryChart domainPadding={20}>\n                  <VictoryAxis/>\n                  <VictoryAxis dependentAxis tickFormat={(x) => (`%${x}`)}/>\n                  <VictoryAxis dependentAxis={true}/>\n                  <VictoryBar style={{ data: { fill: \"#17a2b8\" } }} alignment=\"start\" data={data} x=\"x\" y=\"y\" domain={{x: [0, 31], y: [-60, 20]}}\n                  labelComponent={<VictoryTooltip/>}\n                  events={[{\n                    target: \"data\",\n                    eventHandlers: {\n                      onMouseOver: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => ({style: {fill: \"black\"}})\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: true })\n                          }\n                        ];\n                      },\n                      onMouseOut: () => {\n                        return [\n                          {\n                            target: \"data\",\n                            mutation: () => {}\n                          }, {\n                            target: \"labels\",\n                            mutation: () => ({ active: false })\n                          }\n                        ];\n                      }\n                    }\n                  }]}\n                  />\n              </VictoryChart>\n            </div>\n          );\n      }\n\n      saveGroceryData = async () => {\n        let groceryData = [this.state.groceryStats, this.state.regionName, this.state.dataStart, this.state.dataEnd];\n           let res = await actions.updateUserGroceryData(groceryData);\n            console.log(\"Updated user with saved grocery data:\", res);\n            this.setState({\n                lastUpdatedUserId: res.data,\n                showAlertGrocery: true\n            })\n      }\n\n      saveParksData = async () => {\n        let parksData = [this.state.parkStats, this.state.regionName, this.state.dataStart, this.state.dataEnd];\n           let res = await actions.updateUserParksData(parksData);\n            console.log(\"Updated user with saved parks data:\", res);\n            this.setState({\n                lastUpdatedUserId: res.data,\n                showAlertParks: true\n            })\n      }\n\n      closeAlertGrocery = () => {\n        this.setState({\n            showAlertGrocery: false\n        })\n    }\n      closeAlertParks = () => {\n        this.setState({\n            showAlertParks: false\n        })\n    }\n\n      render() {\n        console.log(\"Mobility Stats from database (Grocery, Transit, Etc.): \", this.state)\n\n        if(this.state.regionName){\n            return (\n                <div>\n                    <div className=\"mobility-hero\">\n                        <div className=\"mobility-title-container\">\n                            <h1 className=\"mobility-title\">{this.state.regionName} Mobility Trends</h1>\n                        </div>\n                        <div className=\"image-preload1\"></div>\n                        <div className=\"image-preload2\"></div>\n                    </div>\n                    <div>\n                        {!this.state.done ? (\n                        <ReactLoading id=\"loading-div\" type={\"bars\"} color={\"black\"} />\n                        ) : (\n                            <Container fluid=\"md\">\n                            <Row>\n                              <Col>\n                                <div className=\"places-trends-container\">\n                                    <div className=\"places-grocery\">\n                                        <div className=\"places-grocery-header\">\n                                            <h2 className=\"places-grocery-title\">Grocery <br></br>& Pharmacy</h2>\n                                        </div>\n                                        <div className=\"places-grocery-content\">    \n                                            {this.getAverageGrocery()}\n                                            <div className=\"places-grocery-average\">\n                                                <img alt=\" \" src={smallCalendar} id=\"small-calendar-icon\"></img>\n                                                <div className=\"average-description\">30 Day Average, based on the latest available month provided by the <a href='https://www.google.com/covid19/mobility/'>Google Mobility Trends</a> report.</div>\n                                            </div>\n                                            \n                                            <div className=\"graph-container\">\n                                            <Alert className=\"save-alert\" show={this.state.showAlertGrocery} dismissible variant='success' onClick={this.closeAlertGrocery}>Saved! <Link to='/profile'>View All Saved Snapshots</Link></Alert>\n                                            <hr className=\"content-divider\"></hr>\n                                            <div className=\"sub-header-save-container\">\n                                                <h4 className=\"trends-header\">Movement Trends for Grocery/Pharmacy</h4>\n                                                <span className=\"date-span\">{this.state.dataStart} through {this.state.dataEnd}</span>\n                                                <br></br>\n                                                <Button id=\"save-button\" size=\"sm\" variant=\"outline-info\" onClick={() => this.saveGroceryData()}>Save Snapshot</Button>{' '}\n                                            </div>\n                                                \n                                                <div className=\"graph-subcontainer\">\n                                                    {this.showGraphGroceryPharmacy()}\n                                                </div>   \n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"places-parks\">\n                                        <div className=\"places-parks-header\">\n                                            <h2 className=\"places-parks-title\">Parks <br></br>& Outdoor Rec.</h2>\n                                        </div>\n                                        <div className=\"places-grocery-content\">\n                                            {this.getAverageParks()}\n                                            <div className=\"places-grocery-average\">\n                                                <img alt=\" \" src={smallCalendar} id=\"small-calendar-icon\"></img>\n                                                <div className=\"average-description\">30 Day Average, based on the latest available month provided by the <a href='https://www.google.com/covid19/mobility/'>Google Mobility Trends</a> report.</div>\n                                            </div>\n                                            <div className=\"graph-container\">\n                                            <Alert className=\"save-alert\" show={this.state.showAlertParks} dismissible variant='success' onClick={this.closeAlertParks}>Saved! <Link to='/profile'>View All Saved Snapshots</Link></Alert>\n                                                <hr className=\"content-divider\"></hr>\n                                                <div className=\"sub-header-save-container\">\n                                                    <h4 className=\"trends-header\">Movement Trends for Parks/Outdoors</h4>\n                                                    <span className=\"date-span\">{this.state.dataStart} through {this.state.dataEnd}</span>\n                                                    <br></br>\n                                                    <Button id=\"save-button\" size=\"sm\" variant=\"outline-info\" onClick={() => this.saveParksData()}>Save Snapshot</Button>{' '}\n                                                </div>\n                                                <div className=\"graph-subcontainer\">\n                                                    <br></br>\n                                                    {this.showGraphParks()}\n                                                </div>   \n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"places-shopping-dining\">\n                                            <div className=\"places-shopping-dining-header\">\n                                                <h2 className=\"places-shopping-dining-title\">Shopping <br></br>& Dining</h2>\n                                            </div>\n                                            <div className=\"places-grocery-content\">\n                                                {this.getAverageShoppingDining()}\n                                                <div className=\"places-grocery-average\">\n                                                    <img alt=\" \" src={smallCalendar} id=\"small-calendar-icon\"></img>\n                                                    <div className=\"average-description\">30 Day Average, based on the latest available month provided by the <a href='https://www.google.com/covid19/mobility/'>Google Mobility Trends</a> report.</div>\n                                                </div>\n                                                <div className=\"graph-container\">\n                                                    <hr className=\"content-divider\"></hr>\n                                                    <div className=\"sub-header-save-container\">\n                                                        <h4 className=\"trends-header\">Movement Trends for Shopping/Dining</h4>\n                                                        <span className=\"date-span\">{this.state.dataStart} through {this.state.dataEnd}</span>\n                                                        <br></br>\n                                                        <Button id=\"save-button\" size=\"sm\" variant=\"outline-info\">Save Snapshot</Button>{' '}\n                                                    </div>\n                                                    <div className=\"graph-subcontainer\">\n                                                        {this.showGraphShoppingDining()}\n                                                    </div>   \n                                                </div>\n                                            </div>\n                                        </div>\n                              </Col>\n                              <Col>\n                              <div className=\"places-trends-container\">\n                                        <div className=\"places-transit\">\n                                            <div className=\"places-transit-header\">\n                                                <h2 className=\"places-parks-title\">Transit <br></br>& Metro</h2>\n                                            </div>\n                                            <div className=\"places-grocery-content\">                                \n                                                {this.getAverageTransit()}\n                                                <div className=\"places-grocery-average\">\n                                                    <img alt=\" \" src={smallCalendar} id=\"small-calendar-icon\"></img>\n                                                    <div className=\"average-description\">30 Day Average, based on the latest available month provided by the <a href='https://www.google.com/covid19/mobility/'>Google Mobility Trends</a> report.</div>\n                                                </div>\n                                                <div className=\"graph-container\">\n                                                    <hr className=\"content-divider\"></hr>\n                                                    <div className=\"sub-header-save-container\">\n                                                        <h4 className=\"trends-header\">Movement Trends for Transit/Metro</h4>\n                                                        <span className=\"date-span\">{this.state.dataStart} through {this.state.dataEnd}</span>\n                                                        <br></br>\n                                                        <Button id=\"save-button\" size=\"sm\" variant=\"outline-info\">Save Snapshot</Button>{' '}\n                                                    </div>\n                                                    <div className=\"graph-subcontainer\">\n                                                        {this.showGraphTransit()}\n                                                    </div>   \n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"places-work\">\n                                            <div className=\"places-work-header\">\n                                                <h2 className=\"places-parks-title\">Work <br></br>& Industry</h2>\n                                            </div>\n                                            <div className=\"places-grocery-content\">\n                                                {this.getAverageWork()}\n                                                <div className=\"places-grocery-average\">\n                                                    <img alt=\" \" src={smallCalendar} id=\"small-calendar-icon\"></img>\n                                                    <div className=\"average-description\">30 Day Average, based on the latest available month provided by the <a href='https://www.google.com/covid19/mobility/'>Google Mobility Trends</a> report.</div>\n                                                </div>\n                                                <div className=\"graph-container\">\n                                                    <hr className=\"content-divider\"></hr>\n                                                    <div className=\"sub-header-save-container\">\n                                                        <h4 className=\"trends-header\">Movement Trends for Work/Industry</h4>\n                                                        <span className=\"date-span\">{this.state.dataStart} through {this.state.dataEnd}</span>\n                                                        <br></br>\n                                                        <Button id=\"save-button\" size=\"sm\" variant=\"outline-info\">Save Snapshot</Button>{' '}\n                                                    </div>\n                                                    <div className=\"graph-subcontainer\">\n                                                        {this.showGraphWork()}\n                                                    </div>   \n                                                </div>\n                                            </div>\n                                        </div>\n                                </div>\n                              </Col>\n                            </Row>\n                          </Container>\n                        )}\n                    </div>\n        \n                </div>\n                );\n        } else {\n            return(\n                <div>\n                    <div className=\"mobility-hero\">\n                        <div className=\"mobility-title-container\">\n                            <h1 className=\"mobility-title\">{this.state.regionName} Mobility Trends</h1>\n                        </div>\n                    </div>\n                    <div className=\"failsafe-screen-mobility-trends\">\n                        <h3>Select <Link to=\"/\">a region</Link> to see Mobility Trends</h3>\n                    </div>\n                </div>\n            )\n        }\n\n        \n      }\n    }\n\nexport default MobilityTrends;","import React, { Component } from 'react';\nimport MobilityTrends from '../Mobility/MobilityTrends';\n\nclass Region extends Component {\n\n    \n    render() {    \n        return (\n            <div>\n                <MobilityTrends regionName={this.props.regionName} setUser={this.props.setUser()} user={this.props.user}/>\n            </div>\n        );\n    }\n}\n\nexport default Region;","import React, {Component, Fragment} from 'react';\nimport { BrowserRouter, Switch, Route, NavLink } from 'react-router-dom';\nimport '../src/App.css';\nimport Home from './components/home/Home';\nimport NotFound from './components/404/NotFound.js';\nimport SignUp from './components/auth/SignUp';\nimport LogIn from './components/auth/LogIn';\nimport Profile from './components/profile/Profile';\nimport actions from './services/index';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Region from './components/Regions/Region';\nimport MobilityTrends from './components/Mobility/MobilityTrends';\n\n\nclass App extends Component {\n  state = {}\n  async componentDidMount() {\n    let user = await actions.isLoggedIn()\n    // This is coming from index.js\n    // same as --> await Axios.get('http:localhost:5000/is-logged-in', { withCredentials: true }\n    this.setState({...user.data})\n  }\n  setUser = (user) => this.setState(user)\n  logOut = async () => {\n    let res = await actions.logOut();\n    console.log(res);\n    this.setUser({email:null, createdAt: null, updatedAt: null, _id: null });\n  }\n  setRegion = (regionName) => {\n    console.log(regionName)\n    this.setState({\n      regionName\n    })\n  }\n  render(){\n    return (\n    <BrowserRouter>\n    <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&family=Raleway:wght@300&display=swap\" rel=\"stylesheet\"></link>\n    <link href=\"https://fonts.googleapis.com/css2?family=Pacifico&display=swap\" rel=\"stylesheet\"></link>\n      <link\n        rel=\"stylesheet\"\n        href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\"\n        integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\"\n        crossOrigin=\"anonymous\"\n      />\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"/\" id=\"mobility-mate\">MobilityMate</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n        {this.state.email ?\n        <Fragment>\n          <Nav.Item>\n            <Nav.Link onClick={this.logOut} href='/#'>Log Out</Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n          <LinkContainer to=\"/profile\">\n            <Nav.Link>Profile</Nav.Link>\n          </LinkContainer>\n          </Nav.Item>\n        </Fragment>\n        :\n        <Fragment>\n          <Nav.Item>\n            <NavLink to=\"/sign-up\" id=\"sign-up-link\">Sign Up</NavLink>\n          </Nav.Item>\n          <Nav.Item>\n            <NavLink to=\"/log-in\" id=\"log-in-link\">Log In</NavLink>\n          </Nav.Item>\n        </Fragment>\n        }\n      </Nav>\n        {this.state.email ?\n            <Nav inline>\n              <div>Logged in as <NavLink to='/profile'>{this.state.email}</NavLink></div>\n            </Nav>\n          :\n          <div></div>\n        }\n        </Navbar.Collapse>\n    </Navbar>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <Home {...props} setRegion={this.setRegion}/>} />\n        <Route exact path=\"/sign-up\" render={(props)=><SignUp {...props} setUser={this.setUser} />} />\n        <Route exact path=\"/log-in\" render={(props) => <LogIn {...props} setUser={this.setUser}/>} />\n        <Route exact path=\"/profile\" render={(props) => <Profile {...props} user={this.state}/>} />\n        <Route exact path=\"/region\" render={(props) => <Region {...props} user={this.state} regionName={this.state.regionName} setUser={this.setUser}/>} />\n        <Route exact path=\"/mobility-trends\" render={(props) => <MobilityTrends {...props} user={this.state} setUser={this.setUser}/>} />\n        <Route component={NotFound} />\n      </Switch>\n    </BrowserRouter>\n  );\n  }\n}\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/down_arrow.f0f3b4e0.png\";","module.exports = __webpack_public_path__ + \"static/media/up_arrow.d002dfc0.png\";","module.exports = __webpack_public_path__ + \"static/media/small_calendar.0490f612.jpg\";"],"sourceRoot":""}